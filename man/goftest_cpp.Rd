% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/GoFTestCpp.R
\name{goftest_cpp}
\alias{goftest_cpp}
\title{Monte Carlo Goodness of Fit tests for Stochastic Block Models}
\usage{
goftest_cpp(A, K = NULL, C = NULL, numGraphs = 100)
}
\arguments{
\item{A}{a n by n binary symmetric adjacency matrix representing a undirected graph where n is the no nodes in the graph}

\item{K}{a numeric scalar representing no of blocks}

\item{C}{numeric vector of size n of block assignment of each node; from 1 to K}

\item{numGraphs}{number of graphs will be sampled; default value is 100}
}
\value{
A list with the elements
\item{statistic}{the values of the chi-square test statistics on each sampled graph}
\item{p.value}{the p-value for the test.}
}
\description{
\code{goftest_cpp} performs chi square goodness of fit test for network data under the model as ERSBM using  Rcpp
}
\examples{
RNGkind(sample.kind = "Rounding")
set.seed(1729)
# We model a network with 3 even classes.
n1 <- 50
n2 <- 50
n3 <- 50

# Generating block assignment for each of the nodes
n <- n1 + n2 + n3
class <- rep(c(1, 2, 3), c(n1, n2, n3))

# Generating the adjacency matrix of the network
# Generate the matrix of connection probability.
cmat <- matrix(
  c(
    30, 0.05, 0.05,
    0.05, 30, 0.05,
    0.05, 0.05, 30
  ),
  ncol = 3,
  byrow = TRUE
)
pmat <- cmat / n

# Creating the n x n adjacency matrix.
adj <- matrix(0, n, n)
for (i in 2:n) {
  for (j in 1:(i - 1)) {
    p <- pmat[class[i], class[j]] # We find the probability of connection with the weights.
    adj[i, j] <- rbinom(1, 1, p) # We include the edge with probability p.
  }
}

adjsymm <- adj + t(adj)

out_cpp <- goftest_cpp(adjsymm, C = class, numGraphs = 100)

chi_sq_seq <- out_cpp$statistic
pvalue <- out_cpp$p.value
print(pvalue)

# Plotting histogram of the sequence of the test statistics
hist(chi_sq_seq, 20, xlab = "chi-square test statistics", main = NULL)
abline(v = chi_sq_seq[1], col = "red", lwd = 5) # adding test statistic on the observed network

}
